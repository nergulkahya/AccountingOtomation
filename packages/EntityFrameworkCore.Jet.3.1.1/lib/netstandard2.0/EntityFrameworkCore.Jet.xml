<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFrameworkCore.Jet</name>
    </assembly>
    <members>
        <member name="T:EntityFrameworkCore.Jet.Design.Internal.JetAnnotationCodeGenerator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Design.Internal.JetAnnotationCodeGenerator.#ctor(Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Design.Internal.JetAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Design.Internal.JetDesignTimeServices">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Design.Internal.JetDesignTimeServices.ConfigureDesignTimeServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogDefaultDecimalTypeColumn">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogByteIdentityColumn">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogFoundDefaultSchema">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogFoundTypeAlias">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogFoundColumn">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogFoundForeignKey">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogPrincipalTableNotInSelectionSet">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogMissingSchema">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogMissingTable">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogFoundSequence">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogFoundTable">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogFoundIndex">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogSkippedIndex">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogFoundPrimaryKey">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogFoundUniqueConstraint">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogPrincipalColumnNotFound">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Diagnostics.Internal.JetLoggingDefinitions.LogReflexiveConstraintIgnored">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Infrastructure.Internal.IJetOptions">
            <summary>
                Options set at the <see cref="T:System.IServiceProvider" /> singleton level to control Jet specific options.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.#ctor">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.#ctor(EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.Info">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.Clone">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.DataAccessProviderFactory">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.WithDataAccessProviderFactory(System.Data.Common.DbProviderFactory)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.UseOuterSelectSkipEmulationViaDataReader">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.WithUseOuterSelectSkipEmulationViaDataReader(System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.EnableMillisecondsSupport">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.WithEnableMillisecondsSupport(System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.Internal.JetOptionsExtension.ApplyServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder">
            <summary>
            Provides extension methods on <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder"/> and <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1"/>
            to configure a <see cref="T:Microsoft.EntityFrameworkCore.DbContext"/> to use with Jet/Access and EntityFrameworkCore.Jet.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder.#ctor(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
                Initializes a new instance of the <see cref="T:EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder" /> class.
            </summary>
            <param name="optionsBuilder"> The options builder. </param>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder.UseOuterSelectSkipEmulationViaDataReader(System.Boolean)">
            <summary>
                Jet/ACE doesn't natively support row skipping. When this option is enabled, row skipping will be
                emulated in the most outer SELECT statement, by letting the JetDataReader ignore as many returned rows
                as should have been skipped by the database.
                This will only work when `JetCommand.ExecuteDataReader()` is beeing used to execute the `JetCommand`.
                It is recommanded to not use this option, but to switch to client evaluation instead, by inserting a
                call to either `AsEnumerable()`, `AsAsyncEnumerable()`, `ToList()`, or `ToListAsync()` and only then
                to use `Skip()`. This will work in all cases and independent of the specific `JetCommand.Execute()`
                method called. 
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder.EnableMillisecondsSupport(System.Boolean)">
            <summary>
                Configures the context support milliseconds in `DateTime`, `DateTimeOffset` and `TimeSpan` values when
                accessing Jet databases. Jet has no native support for milliseconds, therefore this feature is opt-in.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder.EnableRetryOnFailure">
            <summary>
                Configures the context to use the default retrying <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder.EnableRetryOnFailure(System.Int32)">
            <summary>
                Configures the context to use the default retrying <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder.EnableRetryOnFailure(System.Int32,System.TimeSpan,System.Collections.Generic.ICollection{System.Int32})">
            <summary>
                Configures the context to use the default retrying <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
            <param name="maxRetryDelay"> The maximum delay between retries. </param>
            <param name="errorNumbersToAdd"> Additional SQL error numbers that should be considered transient. </param>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.DecimalTypeDefaultWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.ByteIdentityColumnWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation},Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.ColumnFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.ForeignKeyFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.DefaultSchemaFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.TypeAliasFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.PrimaryKeyFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.UniqueConstraintFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.IndexFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.IndexSkipped(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.ForeignKeyReferencesMissingPrincipalTableWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.ForeignKeyPrincipalColumnMissingWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.MissingSchemaWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.MissingTableWarning(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.SequenceFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String,System.Boolean,System.Int32,System.Int64,System.Int64,System.Int64)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.TableFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetLoggerExtensions.ReflexiveConstraintIgnored(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding},System.String,System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Internal.JetModelValidator">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetModelValidator.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ModelValidatorDependencies,Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidatorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetModelValidator.Validate(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetModelValidator.ValidateIndexIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetModelValidator.ValidateSharedColumnsCompatibility(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.String,Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Internal.JetOptions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetOptions.Initialize(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetOptions.Validate(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetOptions.DataAccessProviderType">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetOptions.UseOuterSelectSkipEmulationViaDataReader">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetOptions.EnableMillisecondsSupport">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetOptions.ConnectionString">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Internal.JetStrings">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetStrings.MigrationScriptGenerationNotSupported">
            <summary>
                Generating idempotent scripts for migration is not currently supported by Jet. For more information, see http://go.microsoft.com/fwlink/?LinkId=723262.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.IdentityBadType(System.Object,System.Object,System.Object)">
            <summary>
                Identity value generation cannot be used for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Identity value generation can only be used with signed integer properties.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.UnqualifiedDataType(System.Object)">
            <summary>
                Data type '{dataType}' is not supported in this form. Either specify the length explicitly in the type name, for example as '{dataType}(16)', or remove the data type and use APIs such as HasMaxLength to allow EF choose the data type.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.UnqualifiedDataTypeOnProperty(System.Object,System.Object)">
            <summary>
                Data type '{dataType}' for property '{property}' is not supported in this form. Either specify the length explicitly in the type name, for example as '{dataType}(16)', or remove the data type and use APIs such as HasMaxLength to allow EF choose the data type.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.SequenceBadType(System.Object,System.Object,System.Object)">
            <summary>
                Jet sequences cannot be used to generate values for the property '{property}' on entity type '{entityType}' because the property type is '{propertyType}'. Sequences can only be used with integer properties.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetStrings.IndexTableRequired">
            <summary>
                Jet requires the table name to be specified for rename index operations. Specify table name in the call to MigrationBuilder.RenameIndex.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetStrings.AlterMemoryOptimizedTable">
            <summary>
                To set memory-optimized on a table on or off the table needs to be dropped and recreated.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetStrings.AlterIdentityColumn">
            <summary>
                To change the IDENTITY property of a column, the column needs to be dropped and recreated.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetStrings.TransientExceptionDetected">
            <summary>
                An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure()' to the 'UseJet' call.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.NonKeyValueGeneration(System.Object,System.Object)">
            <summary>
                The property '{property}' on entity type '{entityType}' is configured to use 'SequenceHiLo' value generator, which is only intended for keys. If this was intentional configure an alternate key on the property, otherwise call 'ValueGeneratedNever' or configure store generation for this property.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.MultipleIdentityColumns(System.Object,System.Object)">
            <summary>
                The properties {properties} are configured to use 'Identity' value generator and are mapped to the same table '{table}'. Only one column per table can be configured as 'Identity'. Call 'ValueGeneratedNever' for properties that should not use 'Identity'.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.IncompatibleTableMemoryOptimizedMismatch(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                Cannot use table '{table}' for entity type '{entityType}' since it is being used for entity type '{otherEntityType}' and entity type '{memoryOptimizedEntityType}' is marked as memory-optimized, but entity type '{nonMemoryOptimizedEntityType}' is not.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetStrings.NoInitialCatalog">
            <summary>
                The database name could not be determined. To use EnsureDeleted, the connection string must specify Initial Catalog.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.DuplicateColumnNameValueGenerationStrategyMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured with different value generation strategies.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.InvalidTableToIncludeInScaffolding(System.Object)">
            <summary>
                The specified table '{table}' is not valid. Specify tables using the format '[schema].[table]'.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetStrings.InvalidColumnNameForFreeText">
            <summary>
                The expression passed to the 'propertyReference' parameter of the 'FreeText' method is not a valid reference to a property. The expression should represent a reference to a full-text indexed property on the object referenced in the from clause: 'from e in context.Entities where EF.Functions.FreeText(e.SomeProperty, textToSearchFor) select e'
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.IncludePropertyDuplicated(System.Object,System.Object)">
            <summary>
                Include property '{entityType}.{property}' cannot be defined multiple times
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.IncludePropertyInIndex(System.Object,System.Object)">
            <summary>
                Include property '{entityType}.{property}' is already included in the index
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.IncludePropertyNotFound(System.Object,System.Object)">
            <summary>
                Include property '{entityType}.{property}' not found
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.DuplicateKeyMismatchedClustering(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
                The keys {key1} on '{entityType1}' and {key2} on '{entityType2}' are both mapped to '{table}.{keyName}' but with different clustering.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetStrings.FunctionOnClient(System.Object)">
            <summary>
                The '{methodName}' method is not supported because the query has switched to client-evaluation. Inspect the log to determine which query expressions are triggering client-evaluation.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Internal.JetStrings.DataAccessProviderFactory">
            <summary>
                The JetConnection has been configured without specifying a DataAccessProviderFactory. This property needs to be set to an object of type OdbcFactory or OleDbFactory.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Internal.JetResources">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogDefaultDecimalTypeColumn(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                No type was specified for the decimal column '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the Jet column type that can accommodate all the values using 'HasColumnType()'.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogByteIdentityColumn(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                The property '{property}' on entity type '{entityType}' is of type 'byte', but is set up to use a Jet identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogFoundDefaultSchema(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found default schema {defaultSchema}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogFoundTypeAlias(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found type alias with name: {alias} which maps to underlying data type {dataType}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogFoundColumn(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found column with table: {tableName}, column name: {columnName}, ordinal: {ordinal}, data type: {dataType}, maximum length: {maxLength}, precision: {precision}, scale: {scale}, nullable: {isNullable}, identity: {isIdentity}, default value: {defaultValue}, computed value: {computedValue}
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogFoundForeignKey(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found foreign key on table: {tableName}, name: {foreignKeyName}, principal table: {principalTableName}, delete action: {deleteAction}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogPrincipalTableNotInSelectionSet(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                For foreign key {fkName} on table {tableName}, unable to model the end of the foreign key on principal table {principaltableName}. This is usually because the principal table was not included in the selection set.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogMissingSchema(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Unable to find a schema in the database matching the selected schema {schema}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogMissingTable(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Unable to find a table in the database matching the selected table {table}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogFoundSequence(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found sequence name: {name}, data type: {dataType}, cyclic: {isCyclic}, increment: {increment}, start: {start}, minimum: {min}, maximum: {max}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogFoundTable(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found table with name: {name}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogFoundIndex(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found index with name: {indexName}, table: {tableName}, is unique: {isUnique}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogSkippedIndex(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Skipped index with name: {indexName}, table: {tableName}, is unique: {isUnique}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogFoundPrimaryKey(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found primary key with name: {primaryKeyName}, table: {tableName}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogFoundUniqueConstraint(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Found unique constraint with name: {uniqueConstraintName}, table: {tableName}.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogPrincipalColumnNotFound(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                For foreign key {foreignKeyName} on table {tableName}, unable to find the column called {principalColumnName} on the foreign key's principal table, {principaltableName}. Skipping foreign key.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Internal.JetResources.LogReflexiveConstraintIgnored(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger)">
            <summary>
                Skipping foreign key '{foreignKeyName}' on table '{tableName}' since all of its columns reference themselves.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Metadata.Internal.JetAnnotationNames">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Metadata.Internal.JetAnnotationNames.Prefix">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Metadata.Internal.JetAnnotationNames.Include">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Metadata.Internal.JetAnnotationNames.ValueGenerationStrategy">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Metadata.Internal.JetAnnotationNames.Identity">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Metadata.Internal.JetAnnotationNames.IdentitySeed">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="F:EntityFrameworkCore.Jet.Metadata.Internal.JetAnnotationNames.IdentityIncrement">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Migrations.HistoryRepositoryDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository.ExistsSql">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository.InterpretExistsResult(System.Object)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository.GetInsertScript(Microsoft.EntityFrameworkCore.Migrations.HistoryRow)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository.GetDeleteScript(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository.GetCreateIfNotExistsScript">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository.GetBeginIfNotExistsScript(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository.GetBeginIfExistsScript(System.String)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetHistoryRepository.GetEndIfScript">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Migrations.Internal.JetMigrationsAnnotationProvider">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetMigrationsAnnotationProvider.#ctor(Microsoft.EntityFrameworkCore.Migrations.MigrationsAnnotationProviderDependencies)">
            <summary>
                Initializes a new instance of this class.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetMigrationsAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IIndex)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Migrations.Internal.JetMigrationsAnnotationProvider.For(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Migrations.Operations.JetCreateDatabaseOperation">
            <summary>
                A Jet-specific <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> to create a database.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Migrations.Operations.JetCreateDatabaseOperation.Name">
            <summary>
                The name of the database.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Migrations.Operations.JetDropDatabaseOperation">
            <summary>
                A Jet-specific <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> to drop a database.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Migrations.Operations.JetDropDatabaseOperation.Name">
            <summary>
                The name of the database.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetConvertTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetConvertTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetDateTimeMemberTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetDateTimeMemberTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetDateTimeMethodTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetMathTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetMemberTranslatorProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetMemberTranslatorProvider.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalMemberTranslatorProviderDependencies)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetMethodCallTranslatorProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetMethodCallTranslatorProvider.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalMethodCallTranslatorProviderDependencies)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetNewGuidTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetObjectToStringTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetStringMemberTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetStringMemberTranslator.Translate(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlExpression,System.Reflection.MemberInfo,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.ExpressionTranslators.Internal.JetStringMethodTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.Internal.JetCompiledQueryCacheKeyGenerator">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="!:ServiceLifetime.Scoped" />. This means that each
                    <see cref="!:DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.Internal.JetCompiledQueryCacheKeyGenerator.#ctor(Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGeneratorDependencies,Microsoft.EntityFrameworkCore.Query.RelationalCompiledQueryCacheKeyGeneratorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.Internal.JetCompiledQueryCacheKeyGenerator.GenerateCacheKey(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.Internal.JetQueryTranslationPostprocessorFactory">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="!:DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.Sql.Internal.JetQuerySqlGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.Sql.Internal.JetQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies,Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource,EntityFrameworkCore.Jet.Infrastructure.Internal.IJetOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.Sql.Internal.JetQuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression)">
            <summary>
                Visit a LikeExpression.
            </summary>
            <param name="likeExpression"> The like expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.Sql.Internal.JetQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <summary>Generates the TOP part of the SELECT statement,</summary>
            <param name="selectExpression"> The select expression. </param>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.Sql.Internal.JetQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.Sql.Internal.JetQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Query.Sql.Internal.JetQuerySqlGeneratorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Query.Sql.Internal.JetQuerySqlGeneratorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies,Microsoft.EntityFrameworkCore.Query.ISqlExpressionFactory,Microsoft.EntityFrameworkCore.Storage.ITypeMappingSource,EntityFrameworkCore.Jet.Infrastructure.Internal.IJetOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Scaffolding.Internal.JetCodeGenerator">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Scaffolding.Internal.JetCodeGenerator.#ctor(Microsoft.EntityFrameworkCore.Scaffolding.ProviderCodeGeneratorDependencies)">
            <summary>
                Initializes a new instance of the <see cref="T:EntityFrameworkCore.Jet.Scaffolding.Internal.JetCodeGenerator" /> class.
            </summary>
            <param name="dependencies"> The dependencies. </param>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Scaffolding.Internal.JetCodeGenerator.GenerateUseProvider(System.String,Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Scaffolding.Internal.JetDatabaseModelFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Scaffolding.Internal.JetDatabaseModelFactory.#ctor(Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Scaffolding.Internal.JetDatabaseModelFactory.Create(System.String,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Scaffolding.Internal.JetDatabaseModelFactory.Create(System.Data.Common.DbConnection,Microsoft.EntityFrameworkCore.Scaffolding.DatabaseModelFactoryOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Scaffolding.Internal.JetDataReaderExtension">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Scaffolding.Internal.JetDataReaderExtension.GetValueOrDefault``1(System.Data.Common.DbDataReader,System.String,``0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Scaffolding.Internal.JetDataRowExtension">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Scaffolding.Internal.JetDataRowExtension.GetValueOrDefault``1(System.Data.DataRow,System.String,``0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.IJetRelationalConnection">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetByteArrayTypeMapping">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetByteArrayTypeMapping.#ctor(System.String,System.Nullable{System.Int32},System.Boolean,Microsoft.EntityFrameworkCore.ChangeTracking.ValueComparer,System.Nullable{Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetByteArrayTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetByteArrayTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetByteArrayTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetCurrencyTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetCurrencyTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetCurrencyTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetCurrencyTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetDatabaseCreator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetDatabaseCreator.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetDatabaseCreator.HasTables">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetDatabaseCreator.Exists">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetDatabaseCreator.Delete">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetDecimalTypeMapping">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetDecimalTypeMapping.#ctor(System.String,System.Nullable{System.Data.DbType},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetDecimalTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetDecimalTypeMapping.Clone(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetDecimalTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetExecutionStrategy">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Storage.Internal.JetExecutionStrategy.RetriesOnFailure">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetExecutionStrategy.Execute``2(``0,System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,``1},System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}})">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetExecutionStrategy.ExecuteAsync``2(``0,System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{Microsoft.EntityFrameworkCore.DbContext,``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}}},System.Threading.CancellationToken)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetExecutionStrategyFactory">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="!:DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetExecutionStrategyFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetExecutionStrategyFactory.CreateDefaultStrategy(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetRelationalConnection">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetRelationalConnection.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalConnectionDependencies)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetRelationalConnection.CreateDbConnection">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetRelationalConnection.CreateEmptyConnection">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Storage.Internal.JetRelationalConnection.IsMultipleActiveResultSetsEnabled">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="P:EntityFrameworkCore.Jet.Storage.Internal.JetRelationalConnection.SupportsAmbientTransactions">
            <summary>
                Indicates whether the store connection supports ambient transactions
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetSqlGenerationHelper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetSqlGenerationHelper.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelperDependencies)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetSqlGenerationHelper.EscapeIdentifier(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetSqlGenerationHelper.EscapeIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetSqlGenerationHelper.DelimitIdentifier(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetSqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetStringTypeMapping">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetStringTypeMapping.#ctor(System.String,System.Boolean,System.Nullable{System.Int32},System.Boolean,System.Nullable{Microsoft.EntityFrameworkCore.Storage.StoreTypePostfix},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetStringTypeMapping.#ctor(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.RelationalTypeMappingParameters,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetStringTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetStringTypeMapping.GenerateNonNullSqlLiteral(System.Object)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetTransientExceptionDetector">
            <summary>
                Detects the exceptions caused by Jet transient failures.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Storage.Internal.JetTypeMappingSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetTypeMappingSource.#ctor(Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies,EntityFrameworkCore.Jet.Infrastructure.Internal.IJetOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetTypeMappingSource.ValidateMapping(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetTypeMappingSource.FindMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Storage.Internal.JetTypeMappingSource.FindRawMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Update.Internal.IJetUpdateSqlGenerator">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="!:ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="!:DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="!:ServiceLifetime.Scoped" />.
                </para>
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Update.Internal.JetModificationCommandBatch">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Update.Internal.JetModificationCommandBatch.#ctor(Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Update.Internal.JetModificationCommandBatch.CanAddCommand(Microsoft.EntityFrameworkCore.Update.ModificationCommand)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Update.Internal.JetModificationCommandBatch.IsCommandTextValid">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Update.Internal.JetModificationCommandBatch.GetParameterCount">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Update.Internal.JetModificationCommandBatchFactory">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="!:ServiceLifetime.Scoped" />. This means that each
                    <see cref="!:DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Update.Internal.JetModificationCommandBatchFactory.#ctor(Microsoft.EntityFrameworkCore.Update.ModificationCommandBatchFactoryDependencies,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Update.Internal.JetModificationCommandBatchFactory.Create">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:EntityFrameworkCore.Jet.Update.Internal.JetUpdateSqlGenerator">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Update.Internal.JetUpdateSqlGenerator.AppendIdentityWhereCondition(System.Text.StringBuilder,Microsoft.EntityFrameworkCore.Update.ColumnModification)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Update.Internal.JetUpdateSqlGenerator.AppendRowsAffectedWhereCondition(System.Text.StringBuilder,System.Int32)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.Update.Internal.JetUpdateSqlGenerator.AppendSelectAffectedCountCommand(System.Text.StringBuilder,System.String,System.String,System.Int32)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>rom your code. This API may change or be removed in future releases.
        </member>
        <member name="T:EntityFrameworkCore.Jet.ValueGeneration.Internal.JetValueGeneratorSelector">
            <summary>
                <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.ValueGeneration.Internal.JetValueGeneratorSelector.#ctor(Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelectorDependencies)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="M:EntityFrameworkCore.Jet.ValueGeneration.Internal.JetValueGeneratorSelector.Create(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId">
            <summary>
                <para>
                    Event IDs for Jet events that correspond to messages logged to an <see cref="T:Microsoft.Extensions.Logging.ILogger" />
                    and events sent to a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
                <para>
                    These IDs are also used with <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.WarningsConfigurationBuilder" /> to configure the
                    behavior of warnings.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.DecimalTypeDefaultWarning">
            <summary>
                <para>
                    No explicit type for a decimal column.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.PropertyEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.ByteIdentityColumnWarning">
            <summary>
                <para>
                    A byte property is set up to use a Jet identity column.
                </para>
                <para>
                    This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Model.Validation" /> category.
                </para>
                <para>
                    This event uses the <see cref="T:Microsoft.EntityFrameworkCore.Diagnostics.PropertyEventData" /> payload when used with a <see cref="T:System.Diagnostics.DiagnosticSource" />.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.ColumnFound">
            <summary>
                A column was found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.DefaultSchemaFound">
            <summary>
                A default schema was found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.TypeAliasFound">
            <summary>
                A type alias was found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.MissingSchemaWarning">
            <summary>
                The database is missing a schema.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.MissingTableWarning">
            <summary>
                The database is missing a table.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.ForeignKeyReferencesMissingPrincipalTableWarning">
            <summary>
                A foreign key references a missing table at the principal end.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.TableFound">
            <summary>
                A table was found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.SequenceFound">
            <summary>
                A sequence was found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.PrimaryKeyFound">
            <summary>
                Primary key was found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.UniqueConstraintFound">
            <summary>
                An unique constraint was found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.IndexFound">
            <summary>
                An index was found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.IndexSkipped">
            <summary>
                An index was skipped.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.ForeignKeyFound">
            <summary>
                A foreign key was found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.ForeignKeyPrincipalColumnMissingWarning">
            <summary>
                A principal column referenced by a foreign key was not found.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Diagnostics.JetEventId.ReflexiveConstraintIgnored">
            <summary>
                A reflexive foreign key constraint was skipped.
                This event is in the <see cref="T:Microsoft.EntityFrameworkCore.DbLoggerCategory.Scaffolding" /> category.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.JetDatabaseFacadeExtensions">
            <summary>
                Jet specific extension methods for <see cref="P:Microsoft.EntityFrameworkCore.DbContext.Database" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDatabaseFacadeExtensions.IsJet(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                <para>
                    Returns true if the database provider currently in use is the Jet provider.
                </para>
                <para>
                    This method can only be used after the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> has been configured because
                    it is only then that the provider is known. This means that this method cannot be used
                    in <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> because this is where application code sets the
                    provider to use as part of configuring the context.
                </para>
            </summary>
            <param name="database"> The facade from <see cref="P:Microsoft.EntityFrameworkCore.DbContext.Database" />. </param>
            <returns> True if Jet is being used; false otherwise. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.JetDbContextOptionsBuilderExtensions">
            <summary>
                Jet specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbContextOptionsBuilderExtensions.UseJet``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Action{EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a Microsoft Jet database.
            </summary>
            <param name="optionsBuilder"> The builder being used to configure the context. </param>
            <param name="fileNameOrConnectionString"> The file name or connection string of the database to connect to.
            If just a file name is supplied, the default data access provider type as defined by
            `JetConfiguration.DefaultDataAccessProviderType` is being used. If a connection string is supplied, the
            underlying data access provider (ODBC or OLE DB) will be inferred from the style of the connection string.
            In case the connection string does not specify an Access driver (ODBC) or ACE/Jet provider (OLE DB), the
            highest version of all compatible installed ones is being used. </param>
            <param name="jetOptionsAction">An optional action to allow additional Jet specific configuration.</param>
            <returns> The options builder so that further configuration can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbContextOptionsBuilderExtensions.UseJet(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Action{EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a Microsoft Jet database.
            </summary>
            <param name="optionsBuilder"> The builder being used to configure the context. </param>
            <param name="fileNameOrConnectionString"> The file name or connection string of the database to connect to.
            If just a file name is supplied, the default data access provider type as defined by
            `JetConfiguration.DefaultDataAccessProviderType` is being used. If a connection string is supplied, the
            underlying data access provider (ODBC or OLE DB) will be inferred from the style of the connection string.
            In case the connection string does not specify an Access driver (ODBC) or ACE/Jet provider (OLE DB), the
            highest version of all compatible installed ones is being used. </param>
            <param name="jetOptionsAction">An optional action to allow additional Jet specific configuration.</param>
            <returns> The options builder so that further configuration can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbContextOptionsBuilderExtensions.UseJet``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,System.Data.Common.DbProviderFactory,System.Action{EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a Microsoft Jet database.
            </summary>
            <param name="optionsBuilder"> The builder being used to configure the context. </param>
            <param name="fileNameOrConnectionString"> The file name or connection string of the database to connect to.</param>
            <param name="dataAccessProviderFactory">An `OdbcFactory` or `OleDbFactory` object to be used for all
            data access operations by the Jet connection.</param>
            <param name="jetOptionsAction">An optional action to allow additional Jet specific configuration.</param>
            <returns> The options builder so that further configuration can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbContextOptionsBuilderExtensions.UseJet(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,System.Data.Common.DbProviderFactory,System.Action{EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a Microsoft Jet database.
            </summary>
            <param name="optionsBuilder"> The builder being used to configure the context. </param>
            <param name="fileNameOrConnectionString"> The file name or connection string of the database to connect to.</param>
            <param name="dataAccessProviderFactory">An `OdbcFactory` or `OleDbFactory` object to be used for all
            data access operations by the Jet connection.</param>
            <param name="jetOptionsAction">An optional action to allow additional Jet specific configuration.</param>
            <returns> The options builder so that further configuration can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbContextOptionsBuilderExtensions.UseJet``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.String,EntityFrameworkCore.Jet.Data.DataAccessProviderType,System.Action{EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a Microsoft Jet database.
            </summary>
            <param name="optionsBuilder"> The builder being used to configure the context. </param>
            <param name="fileNameOrConnectionString"> The file name or connection string of the database to connect to.</param>
            <param name="dataAccessProviderType">The type of the data access provider (`Odbc` or `OleDb`) to be used for all
            data access operations by the Jet connection.</param>
            <param name="jetOptionsAction">An optional action to allow additional Jet specific configuration.</param>
            <returns> The options builder so that further configuration can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbContextOptionsBuilderExtensions.UseJet(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.String,EntityFrameworkCore.Jet.Data.DataAccessProviderType,System.Action{EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a Microsoft Jet database.
            </summary>
            <param name="optionsBuilder"> The builder being used to configure the context. </param>
            <param name="fileNameOrConnectionString"> The file name or connection string of the database to connect to.</param>
            <param name="dataAccessProviderType">The type of the data access provider (`Odbc` or `OleDb`) to be used for all
            data access operations by the Jet connection.</param>
            <param name="jetOptionsAction">An optional action to allow additional Jet specific configuration.</param>
            <returns> The options builder so that further configuration can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbContextOptionsBuilderExtensions.UseJet``1(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder{``0},System.Data.Common.DbConnection,System.Action{EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a Microsoft Jet database.
            </summary>
            <typeparam name="TContext"> The type of context to be configured. </typeparam>
            <param name="optionsBuilder"> The builder being used to configure the context. </param>
            <param name="connection">
                An existing <see cref="T:System.Data.Common.DbConnection" /> to be used to connect to the database. If the connection is
                in the open state then EF will not open or close the connection. If the connection is in the closed
                state then EF will open and close the connection as needed.
            </param>
            <param name="jetOptionsAction">An optional action to allow additional Jet specific configuration.</param>
            <returns> The options builder so that further configuration can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbContextOptionsBuilderExtensions.UseJet(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder,System.Data.Common.DbConnection,System.Action{EntityFrameworkCore.Jet.Infrastructure.JetDbContextOptionsBuilder})">
            <summary>
                Configures the context to connect to a Microsoft Jet database.
            </summary>
            <param name="optionsBuilder"> The builder being used to configure the context. </param>
            <param name="connection">
                An existing <see cref="T:System.Data.Common.DbConnection" /> to be used to connect to the database. If the connection is
                in the open state then EF will not open or close the connection. If the connection is in the closed
                state then EF will open and close the connection as needed.
            </param>
            <param name="jetOptionsAction">An optional action to allow additional Jet specific configuration.</param>
            <returns> The options builder so that further configuration can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions">
            <summary>
                Provides CLR methods that get translated to database functions when used in LINQ to Entities queries.
                The methods on this class are accessed via <see cref="P:Microsoft.EntityFrameworkCore.EF.Functions" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffYear(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTime,System.DateTime)">
            <summary>
                Counts the number of year boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(YEAR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of year boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffYear(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Counts the number of year boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(YEAR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of year boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffYear(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
                Counts the number of year boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(YEAR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of year boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffYear(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
                Counts the number of year boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(YEAR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of year boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMonth(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTime,System.DateTime)">
            <summary>
                Counts the number of month boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(MONTH,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of month boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMonth(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Counts the number of month boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(MONTH,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of month boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMonth(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
                Counts the number of month boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(MONTH,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of month boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMonth(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
                Counts the number of month boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(MONTH,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of month boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffDay(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTime,System.DateTime)">
            <summary>
                Counts the number of day boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(DAY,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of day boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffDay(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Counts the number of day boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(DAY,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of day boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffDay(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
                Counts the number of day boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(DAY,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of day boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffDay(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
                Counts the number of day boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(DAY,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of day boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffHour(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTime,System.DateTime)">
            <summary>
                Counts the number of hour boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(HOUR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of hour boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffHour(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Counts the number of hour boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(HOUR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of hour boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffHour(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
                Counts the number of hour boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(HOUR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of hour boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffHour(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
                Counts the number of hour boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(HOUR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of hour boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffHour(Microsoft.EntityFrameworkCore.DbFunctions,System.TimeSpan,System.TimeSpan)">
            <summary>
                Counts the number of hour boundaries crossed between the startTimeSpan and endTimeSpan.
                Corresponds to SQL Server's DATEDIFF(HOUR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startTimeSpan">Starting timespan for the calculation.</param>
            <param name="endTimeSpan">Ending timespan for the calculation.</param>
            <returns>Number of hour boundaries crossed between the timespans.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffHour(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
                Counts the number of hour boundaries crossed between the startTimeSpan and endTimeSpan.
                Corresponds to SQL Server's DATEDIFF(HOUR,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startTimeSpan">Starting timespan for the calculation.</param>
            <param name="endTimeSpan">Ending timespan for the calculation.</param>
            <returns>Number of hour boundaries crossed between the timespans.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMinute(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTime,System.DateTime)">
            <summary>
                Counts the number of minute boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(MINUTE,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of minute boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMinute(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Counts the number of minute boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(MINUTE,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of minute boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMinute(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
                Counts the number of minute boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(MINUTE,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of minute boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMinute(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
                Counts the number of minute boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(MINUTE,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of minute boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMinute(Microsoft.EntityFrameworkCore.DbFunctions,System.TimeSpan,System.TimeSpan)">
            <summary>
                Counts the number of minute boundaries crossed between the startTimeSpan and endTimeSpan.
                Corresponds to SQL Server's DATEDIFF(MINUTE,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startTimeSpan">Starting timespan for the calculation.</param>
            <param name="endTimeSpan">Ending timespan for the calculation.</param>
            <returns>Number of minute boundaries crossed between the timespans.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffMinute(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
                Counts the number of minute boundaries crossed between the startTimeSpan and endTimeSpan.
                Corresponds to SQL Server's DATEDIFF(MINUTE,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startTimeSpan">Starting timespan for the calculation.</param>
            <param name="endTimeSpan">Ending timespan for the calculation.</param>
            <returns>Number of minute boundaries crossed between the timespans.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffSecond(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTime,System.DateTime)">
            <summary>
                Counts the number of second boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(SECOND,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of second boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffSecond(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
                Counts the number of second boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(SECOND,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of second boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffSecond(Microsoft.EntityFrameworkCore.DbFunctions,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
                Counts the number of second boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(SECOND,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of second boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffSecond(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
                Counts the number of second boundaries crossed between the startDate and endDate.
                Corresponds to SQL Server's DATEDIFF(SECOND,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startDate">Starting date for the calculation.</param>
            <param name="endDate">Ending date for the calculation.</param>
            <returns>Number of second boundaries crossed between the dates.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffSecond(Microsoft.EntityFrameworkCore.DbFunctions,System.TimeSpan,System.TimeSpan)">
            <summary>
                Counts the number of second boundaries crossed between the startTimeSpan and endTimeSpan.
                Corresponds to SQL Server's DATEDIFF(SECOND,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startTimeSpan">Starting timespan for the calculation.</param>
            <param name="endTimeSpan">Ending timespan for the calculation.</param>
            <returns>Number of second boundaries crossed between the timespans.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.DateDiffSecond(Microsoft.EntityFrameworkCore.DbFunctions,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
                Counts the number of second boundaries crossed between the startTimeSpan and endTimeSpan.
                Corresponds to SQL Server's DATEDIFF(SECOND,startDate,endDate).
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="startTimeSpan">Starting timespan for the calculation.</param>
            <param name="endTimeSpan">Ending timespan for the calculation.</param>
            <returns>Number of second boundaries crossed between the timespans.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetDbFunctionsExtensions.IsDate(Microsoft.EntityFrameworkCore.DbFunctions,System.String)">
            <summary>
                Validate if the given string is a valid date.
                Corresponds to the SQL Server's ISDATE('date').
            </summary>
            <param name="_">The DbFunctions instance.</param>
            <param name="expression">Expression to validate</param>
            <returns>true for valid date and false otherwise.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.JetIndexExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" /> for Jet-specific metadata.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetIndexExtensions.GetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IIndex)">
            <summary>
                Returns included property names, or <c>null</c> if they have not been specified.
            </summary>
            <param name="index"> The index. </param>
            <returns> The included property names, or <c>null</c> if they have not been specified. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetIndexExtensions.SetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                Sets included property names.
            </summary>
            <param name="index"> The index. </param>
            <param name="properties"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetIndexExtensions.SetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)">
            <summary>
                Sets included property names.
            </summary>
            <param name="index"> The index. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <param name="properties"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetIndexExtensions.GetIncludePropertiesConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the included property names.
            </summary>
            <param name="index"> The index. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the included property names. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.JetModelBuilderExtensions">
            <summary>
                Jet specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelBuilderExtensions.UseIdentityColumns(Microsoft.EntityFrameworkCore.ModelBuilder,System.Int32,System.Int32)">
            <summary>
                Configures the model to use the Jet IDENTITY feature to generate values for key properties
                marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />, when targeting Jet. This is the default
                behavior when targeting Jet.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="seed"> The value that is used for the very first row loaded into the table. </param>
            <param name="increment"> The incremental value that is added to the identity value of the previous row that was loaded. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelBuilderExtensions.HasIdentityColumnSeed(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Configures the default seed for Jet IDENTITY.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="seed"> The value that is used for the very first row loaded into the table. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelBuilderExtensions.CanSetIdentityColumnSeed(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Returns a value indicating whether the given value can be set as the default seed for Jet IDENTITY.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="seed"> The value that is used for the very first row loaded into the table. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns> <c>true</c> if the given value can be set as the seed for Jet IDENTITY. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelBuilderExtensions.HasIdentityColumnIncrement(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Configures the default increment for Jet IDENTITY.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="increment"> The incremental value that is added to the identity value of the previous row that was loaded. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelBuilderExtensions.CanSetIdentityColumnIncrement(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Returns a value indicating whether the given value can be set as the default increment for Jet IDENTITY.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="increment"> The incremental value that is added to the identity value of the previous row that was loaded. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns> <c>true</c> if the given value can be set as the default increment for Jet IDENTITY. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelBuilderExtensions.HasValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy},System.Boolean)">
            <summary>
                Configures the default value generation strategy for key properties marked as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />,
                when targeting Jet.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="valueGenerationStrategy"> The value generation strategy. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelBuilderExtensions.CanSetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Nullable{EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy},System.Boolean)">
            <summary>
                Returns a value indicating whether the given value can be set as the default value generation strategy.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="valueGenerationStrategy"> The value generation strategy. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns> <c>true</c> if the given value can be set as the default value generation strategy. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.GetIdentitySeed(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Returns the default identity seed.
            </summary>
            <param name="model"> The model. </param>
            <returns> The default identity seed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.SetIdentitySeed(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Nullable{System.Int32})">
            <summary>
                Sets the default identity seed.
            </summary>
            <param name="model"> The model. </param>
            <param name="seed"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.SetIdentitySeed(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Sets the default identity seed.
            </summary>
            <param name="model"> The model. </param>
            <param name="seed"> The value to set. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.GetIdentitySeedConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default schema.
            </summary>
            <param name="model"> The model. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default schema. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.GetIdentityIncrement(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Returns the default identity increment.
            </summary>
            <param name="model"> The model. </param>
            <returns> The default identity increment. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.SetIdentityIncrement(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Nullable{System.Int32})">
            <summary>
                Sets the default identity increment.
            </summary>
            <param name="model"> The model. </param>
            <param name="increment"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.SetIdentityIncrement(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Sets the default identity increment.
            </summary>
            <param name="model"> The model. </param>
            <param name="increment"> The value to set. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.GetIdentityIncrementConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default identity increment.
            </summary>
            <param name="model"> The model. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default identity increment. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.GetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Returns the <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" /> to use for properties
                of keys in the model, unless the property has a strategy explicitly set.
            </summary>
            <param name="model"> The model. </param>
            <returns> The default <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" />. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Nullable{EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy})">
            <summary>
                Sets the <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" /> to use for properties
                of keys in the model that don't have a strategy explicitly set.
            </summary>
            <param name="model"> The model. </param>
            <param name="value"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IConventionModel,System.Nullable{EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy},System.Boolean)">
            <summary>
                Sets the <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" /> to use for properties
                of keys in the model that don't have a strategy explicitly set.
            </summary>
            <param name="model"> The model. </param>
            <param name="value"> The value to set. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetModelExtensions.GetValueGenerationStrategyConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionModel)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" />.
            </summary>
            <param name="model"> The model. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the default <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" />. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.JetPropertyBuilderExtensions">
            <summary>
                Jet specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyBuilderExtensions.UseIdentityColumn(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Int32,System.Int32)">
            <summary>
                Configures the key property to use the Jet IDENTITY feature to generate values for new entities,
                when targeting Jet. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="seed"> The value that is used for the very first row loaded into the table. </param>
            <param name="increment"> The incremental value that is added to the identity value of the previous row that was loaded. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyBuilderExtensions.UseIdentityColumn``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Int32,System.Int32)">
            <summary>
                Configures the key property to use the Jet IDENTITY feature to generate values for new entities,
                when targeting Jet. This method sets the property to be <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" />.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="seed"> The value that is used for the very first row loaded into the table. </param>
            <param name="increment"> The incremental value that is added to the identity value of the previous row that was loaded. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyBuilderExtensions.HasIdentityColumnSeed(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Configures the seed for Jet IDENTITY.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="seed"> The value that is used for the very first row loaded into the table. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyBuilderExtensions.CanSetIdentityColumnSeed(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Returns a value indicating whether the given value can be set as the seed for Jet IDENTITY.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="seed"> The value that is used for the very first row loaded into the table. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns> <c>true</c> if the given value can be set as the seed for Jet IDENTITY. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyBuilderExtensions.HasIdentityColumnIncrement(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Configures the increment for Jet IDENTITY.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="increment"> The incremental value that is added to the identity value of the previous row that was loaded. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyBuilderExtensions.CanSetIdentityColumnIncrement(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Returns a value indicating whether the given value can be set as the increment for Jet IDENTITY.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="increment"> The incremental value that is added to the identity value of the previous row that was loaded. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns> <c>true</c> if the given value can be set as the default increment for Jet IDENTITY. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyBuilderExtensions.HasValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy},System.Boolean)">
            <summary>
                Configures the value generation strategy for the key property, when targeting Jet.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="valueGenerationStrategy"> The value generation strategy. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyBuilderExtensions.CanSetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.Nullable{EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy},System.Boolean)">
            <summary>
                Returns a value indicating whether the given value can be set as the value generation strategy.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="valueGenerationStrategy"> The value generation strategy. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
            <returns> <c>true</c> if the given value can be set as the default value generation strategy. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.JetPropertyExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> for Jet-specific metadata.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.GetIdentitySeed(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Returns the identity seed.
            </summary>
            <param name="property"> The property. </param>
            <returns> The identity seed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.SetIdentitySeed(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int32})">
            <summary>
                Sets the identity seed.
            </summary>
            <param name="property"> The property. </param>
            <param name="seed"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.SetIdentitySeed(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Sets the identity seed.
            </summary>
            <param name="property"> The property. </param>
            <param name="seed"> The value to set. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.GetIdentitySeedConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity seed.
            </summary>
            <param name="property"> The property. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity seed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.GetIdentityIncrement(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Returns the identity increment.
            </summary>
            <param name="property"> The property. </param>
            <returns> The identity increment. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.SetIdentityIncrement(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int32})">
            <summary>
                Sets the identity increment.
            </summary>
            <param name="property"> The property. </param>
            <param name="increment"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.SetIdentityIncrement(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{System.Int32},System.Boolean)">
            <summary>
                Sets the identity increment.
            </summary>
            <param name="property"> The property. </param>
            <param name="increment"> The value to set. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.GetIdentityIncrementConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity increment.
            </summary>
            <param name="property"> The property. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the identity increment. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.GetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                <para>
                    Returns the <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" /> to use for the property.
                </para>
                <para>
                    If no strategy is set for the property, then the strategy to use will be taken from the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
                </para>
            </summary>
            <returns> The strategy, or <see cref="F:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy.None" /> if none was set. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy})">
            <summary>
                Sets the <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" /> to use for the property.
            </summary>
            <param name="property"> The property. </param>
            <param name="value"> The strategy to use. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.SetValueGenerationStrategy(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Nullable{EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy},System.Boolean)">
            <summary>
                Sets the <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" /> to use for the property.
            </summary>
            <param name="property"> The property. </param>
            <param name="value"> The strategy to use. </param>
            <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.GetValueGenerationStrategyConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" />.
            </summary>
            <param name="property"> The property. </param>
            <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" />. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetPropertyExtensions.IsCompatibleWithValueGeneration(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Returns a value indicating whether the property is compatible with any <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" />.
            </summary>
            <param name="property"> The property. </param>
            <returns> <c>true</c> if compatible. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy">
            <summary>
                An <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> implementation for retrying failed executions
                on Jet.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy" />.
            </summary>
            <param name="context"> The context on which the operations will be invoked. </param>
            <remarks>
                The default retry limit is 6, which means that the total amount of time spent before failing is about a minute.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy" />.
            </summary>
            <param name="dependencies"> Parameter object containing service dependencies. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.DbContext,System.Int32)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy" />.
            </summary>
            <param name="context"> The context on which the operations will be invoked. </param>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies,System.Int32)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy" />.
            </summary>
            <param name="dependencies"> Parameter object containing service dependencies. </param>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.DbContext,System.Int32,System.TimeSpan,System.Collections.Generic.ICollection{System.Int32})">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy" />.
            </summary>
            <param name="context"> The context on which the operations will be invoked. </param>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
            <param name="maxRetryDelay"> The maximum delay between retries. </param>
            <param name="errorNumbersToAdd"> Additional SQL error numbers that should be considered transient. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyDependencies,System.Int32,System.TimeSpan,System.Collections.Generic.ICollection{System.Int32})">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy" />.
            </summary>
            <param name="dependencies"> Parameter object containing service dependencies. </param>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
            <param name="maxRetryDelay"> The maximum delay between retries. </param>
            <param name="errorNumbersToAdd"> Additional SQL error numbers that should be considered transient. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy.ShouldRetryOn(System.Exception)">
            <summary>
                Determines whether the specified exception represents a transient failure that can be
                compensated by a retry. Additional exceptions to retry on can be passed to the constructor.
            </summary>
            <param name="exception"> The exception object to be verified. </param>
            <returns>
                <c>true</c> if the specified exception is considered as transient, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.JetRetryingExecutionStrategy.GetNextDelay(System.Exception)">
            <summary>
                Determines whether the operation should be retried and the delay before the next attempt.
            </summary>
            <param name="lastException"> The exception thrown during the last execution attempt. </param>
            <returns>
                Returns the delay indicating how long to wait for before the next execution attempt if the operation should be retried;
                <c>null</c> otherwise
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetStoreGenerationConvention">
            <summary>
                A convention that ensures that properties aren't configured to have a default value, as computed column
                or using a <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" /> at the same time.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetStoreGenerationConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetStoreGenerationConvention" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this convention. </param>
            <param name="relationalDependencies">  Parameter object containing relational dependencies for this convention. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetStoreGenerationConvention.ProcessPropertyAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation})">
            <summary>
                Called after an annotation is changed on a property.
            </summary>
            <param name="propertyBuilder"> The builder for the property. </param>
            <param name="name"> The annotation name. </param>
            <param name="annotation"> The new annotation. </param>
            <param name="oldAnnotation"> The old annotation.  </param>
            <param name="context"> Additional information associated with convention execution. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationStrategyConvention">
            <summary>
                A convention that configures the default model <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" /> as
                <see cref="F:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy.IdentityColumn" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationStrategyConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationStrategyConvention" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this convention. </param>
            <param name="relationalDependencies">  Parameter object containing relational dependencies for this convention. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationStrategyConvention.Dependencies">
            <summary>
                Parameter object containing service dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationStrategyConvention.ProcessModelInitialized(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})">
            <summary>
                Called after a model is initialized.
            </summary>
            <param name="modelBuilder"> The builder for the model. </param>
            <param name="context"> Additional information associated with convention execution. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationStrategyConvention.ProcessModelFinalized(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})">
            <inheritdoc />
            <summary>
                Called after a model is finalized.
            </summary>
            <param name="modelBuilder"> The builder for the model. </param>
            <param name="context"> Additional information associated with convention execution. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationConvention">
            <summary>
                A convention that configures store value generation as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd" /> on properties that are
                part of the primary key and not part of any foreign keys, were configured to have a database default value
                or were configured to use a <see cref="T:EntityFrameworkCore.Jet.Metadata.JetValueGenerationStrategy" />.
                It also configures properties as <see cref="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAddOrUpdate" /> if they were configured as computed columns.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies,Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.RelationalConventionSetBuilderDependencies)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationConvention" />.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this convention. </param>
            <param name="relationalDependencies">  Parameter object containing relational dependencies for this convention. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationConvention.ProcessPropertyAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation})">
            <summary>
                Called after an annotation is changed on a property.
            </summary>
            <param name="propertyBuilder"> The builder for the property. </param>
            <param name="name"> The annotation name. </param>
            <param name="annotation"> The new annotation. </param>
            <param name="oldAnnotation"> The old annotation.  </param>
            <param name="context"> Additional information associated with convention execution. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationConvention.GetValueGenerated(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)">
            <summary>
                Returns the store value generation strategy to set for the given property.
            </summary>
            <param name="property"> The property. </param>
            <returns> The store value generation strategy to set for the given property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.JetValueGenerationConvention.GetValueGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Returns the store value generation strategy to set for the given property.
            </summary>
            <param name="property"> The property. </param>
            <returns> The store value generation strategy to set for the given property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator">
            <summary>
                <para>
                    Jet-specific implementation of <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerator" />.
                </para>
                <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGeneratorDependencies,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider,EntityFrameworkCore.Jet.Infrastructure.Internal.IJetOptions)">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator" /> instance.
            </summary>
            <param name="dependencies"> Parameter object containing dependencies for this service. </param>
            <param name="migrationsAnnotations"> Provider-specific Migrations annotations to use. </param>
            <param name="options"> Provider-specific options. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                <para>
                    Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" /> by making calls on the given
                    <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
                </para>
                <para>
                    This method uses a double-dispatch mechanism to call one of the 'Generate' methods that are
                    specific to a certain subtype of <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation" />. Typically database providers
                    will override these specific methods rather than this method. However, providers can override
                    this methods to handle provider-specific operations.
                </para>
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation" /> by making calls on the given
                <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
            <param name="terminate"> Indicates whether or not to terminate the command after generating SQL for the operation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterColumnOperation" />
                by making calls on the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameIndexOperation" />
                by making calls on the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation" />
                by making calls on the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.CreateIndexOperation" /> by making calls on the given
                <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
            <param name="terminate"> Indicates whether or not to terminate the command after generating SQL for the operation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(EntityFrameworkCore.Jet.Migrations.Operations.JetCreateDatabaseOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Builds commands for the given <see cref="T:EntityFrameworkCore.Jet.Migrations.Operations.JetCreateDatabaseOperation" />
                by making calls on the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(EntityFrameworkCore.Jet.Migrations.Operations.JetDropDatabaseOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Builds commands for the given <see cref="T:EntityFrameworkCore.Jet.Migrations.Operations.JetDropDatabaseOperation" />
                by making calls on the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AlterDatabaseOperation" />
                by making calls on the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropForeignKeyOperation" /> by making calls on the given
                <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />, and then terminates the final command.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
            <param name="terminate"> Indicates whether or not to terminate the command after generating SQL for the operation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropIndexOperation" />
                by making calls on the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
            <param name="terminate"> Indicates whether or not to terminate the command after generating SQL for the operation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder,System.Boolean)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.DropColumnOperation" /> by making calls on the given
                <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
            <param name="terminate"> Indicates whether or not to terminate the command after generating SQL for the operation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameColumnOperation" />
                by making calls on the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.Generate(Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Builds commands for the given <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.SqlOperation" /> by making calls on the given
                <see cref="T:Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder" />, and then terminates the final command.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.ForeignKeyAction(Microsoft.EntityFrameworkCore.Migrations.ReferentialAction,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Generates a SQL fragment for the given referential action.
            </summary>
            <param name="referentialAction"> The referential action. </param>
            <param name="builder"> The command builder to use to add the SQL fragment. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.DefaultValue(System.Object,System.String,System.String,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Generates a SQL fragment for the default constraint of a column.
            </summary>
            <param name="defaultValue"> The default value for the column. </param>
            <param name="defaultValueSql"> The SQL expression to use for the column's default constraint. </param>
            <param name="columnType"> Store/database type of the column. </param>
            <param name="builder"> The command builder to use to add the SQL fragment. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.ForeignKeyConstraint(Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Generates a SQL fragment for a foreign key constraint of an <see cref="T:Microsoft.EntityFrameworkCore.Migrations.Operations.AddForeignKeyOperation" />.
            </summary>
            <param name="operation"> The operation. </param>
            <param name="model"> The target model which may be <c>null</c> if the operations exist without a model. </param>
            <param name="builder"> The command builder to use to add the SQL fragment. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.DropDefaultConstraint(System.String,System.String,Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Generates a SQL fragment to drop default constraints for a column.
            </summary>
            <param name="tableName"> The table that contains the column.</param>
            <param name="columnName"> The column. </param>
            <param name="builder"> The command builder to use to add the SQL fragment. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.GetIndexesToRebuild(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation)">
            <summary>
                Gets the list of indexes that need to be rebuilt when the given property is changing.
            </summary>
            <param name="property"> The property. </param>
            <param name="currentOperation"> The operation which may require a rebuild. </param>
            <returns> The list of indexes affected. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.DropIndexes(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Generates SQL to drop the given indexes.
            </summary>
            <param name="indexes"> The indexes to drop. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.JetMigrationsSqlGenerator.CreateIndexes(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Migrations.MigrationCommandListBuilder)">
            <summary>
                Generates SQL to create the given indexes.
            </summary>
            <param name="indexes"> The indexes to create. </param>
            <param name="builder"> The command builder to use to build the commands. </param>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.JetServiceCollectionExtensions">
            <summary>
                Jet specific extension methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
    </members>
</doc>
